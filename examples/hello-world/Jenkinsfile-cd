pipeline {
    agent {
        label 'AGENT-1'
    }

    environment {
        APP_DIR = "examples/hello-world"
        IMAGE_NAME = "hello-world-app"
        DOCKERHUB_USER = "prasadyadav99"
    }

    parameters {
        string(name: 'VERSION', defaultValue: '', description: 'Docker image version to deploy')
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/prasadbeedam/express.git'
                sh "git checkout main"
            }
        }

        stage('List Files in hello-world') {
            steps {
                dir("${APP_DIR}") {
                    sh "ls -ltr"
                }
            }
        }

        stage('Read the Version') {
            steps {
                dir("${APP_DIR}") {
                    script {
                        def packageJson = readJSON file: 'package.json'
                        def appVersion = packageJson.version
                        echo "ðŸ“¦ Application version: ${appVersion}"

                        currentBuild.displayName = "v${appVersion}"
                        env.IMAGE_TAG = "${IMAGE_NAME}:${appVersion}"
                        env.FULL_IMAGE_NAME = "${DOCKERHUB_USER}/${IMAGE_NAME}:${appVersion}"
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir("${APP_DIR}") {
                    sh "docker build -t ${FULL_IMAGE_NAME} ."
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                dir("${APP_DIR}") {
                    echo "ðŸ“¤ Pushing image: ${FULL_IMAGE_NAME}"
                    sh '''
                        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKERHUB_USER" --password-stdin
                        docker push ${FULL_IMAGE_NAME}
                    '''
                }
            }
        }

        stage('Update deployment.yaml with Image') {
            steps {
                dir("${APP_DIR}") {
                    echo "ðŸ”§ Updating deployment.yaml with image: ${FULL_IMAGE_NAME}"
                    sh '''
                        sed -i "s|image: .*|image: ${FULL_IMAGE_NAME}|" deployment.yaml
                        echo "âœ… Updated deployment.yaml:"
                        cat deployment.yaml
                    '''
                }
            }
        }

        stage('Deploy to EKS') {
            steps {
                dir("${APP_DIR}") {
                    echo "ðŸš€ Deploying to EKS (namespace: hello-world)"
                    sh '''
                        kubectl apply -n hello-world -f deployment.yaml
                    '''
                }
            }
        }
    }
}
