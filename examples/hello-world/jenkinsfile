pipeline {
    agent any

    environment {
        IMAGE_NAME = "hello-world-app"
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/prasadbeedam/express.git'
            }
        }

        stage('Read the Version') {
            steps {
                script {
                    def packageJson = readJSON file: 'package.json'
                    def appVersion = packageJson.version
                    env.IMAGE_TAG = "${IMAGE_NAME}:${appVersion}"
                    echo "üì¶ App version: ${appVersion}"
                    echo "üì∏ Docker Image Tag: ${IMAGE_TAG}"
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${IMAGE_TAG} ."
            }
        }

        stage('Run Container') {
            steps {
                sh "docker rm -f hello-world-container || true"
                sh "docker run -d -p 8080:8080 --name hello-world-container ${IMAGE_TAG}"
            }
        }

        stage('Test Endpoint') {
            steps {
                script {
                    sleep(time: 5, unit: 'SECONDS')
                    def response = sh(script: "curl -s http://localhost:8080", returnStdout: true).trim()
                    if (response == 'Hello World') {
                        echo "‚úÖ Test passed: ${response}"
                    } else {
                        error("‚ùå Test failed: Unexpected response '${response}'")
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'üßπ Cleaning up container...'
            sh 'docker rm -f hello-world-container || true'
        }
        success {
            echo 'üéâ Pipeline completed successfully!'
        }
        failure {
            echo '‚ùå Pipeline failed. Please check the logs above.'
        }
    }
}
